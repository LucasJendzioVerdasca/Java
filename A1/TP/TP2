import java.util.Scanner;
import java.util.concurrent.*;

public class Main {
    public static void main(String[] args) {
        try (Scanner sc = new Scanner(System.in)) {
            System.out.println("Quel exercice ? Saisissez :");
            System.out.println("1. Discriminant");
            System.out.println("2. Parité d'un nombre");
            System.out.println("3. Calcul d'extremum");
            System.out.println("4. Égalité entre chaînes de caractères");
            System.out.println("5. Factorielle");
            System.out.println("6. Compte à rebours");
            System.out.println("7. Valeurs de carrés");
            System.out.println("8. Table de multiplication");
            System.out.println("9. Division d'entiers");
            System.out.println("10. Règle graduée");
            System.out.println("11. Nombres premiers");
            System.out.println("12. Manipulations sur un tableau");

            int choix = sc.nextInt();

            switch (choix) {
                case 1:
                    discriminant();
                    break;
                case 2:
                    parite();
                    break;
                case 3:
                    extremum();
                    break;
                case 4:
                    egaliteStr();
                    break;
                case 5:
                    factorielle();
                    break;
                case 6:
                    countdown();
                    break;
                case 7:
                    carres();
                    break;
                case 8:
                    tableMultiplication();
                    break;
                case 9:
                    division();
                    break;
                case 10:
                    regle();
                    break;
                case 11:
                    nombrePremier();
                    break;
                case 12:
                    affichageTableau();
                    break;
                default:
                    System.out.println("Choix non valide");
            }
        }
    }

    public static void discriminant() {
        // Import du scanner//
        try (Scanner sc = new Scanner(System.in)) {
            // Déclaration des variables//
            System.out.println("Quelle est la valeur de a ?");
            int a = sc.nextInt();
            System.out.println("Quelle est la valeur de b ?");
            int b = sc.nextInt();
            System.out.println("Quelle est la valeur de c ?");
            int c = sc.nextInt();

            // Calcul du discriminant//
            int delta = (b * b) - (4 * a * c);
            System.out.println("Le discriminant est de " + delta + ".");

            // cas delta négatif//
            if (delta < 0) {
                System.out.println("Il n'y a pas de solution.");
            }

            // cas delta nul//
            else if (delta == 0) {
                System.out.println("Il y a une solution.");
                int x = -b / (2 * a);
                System.out.println("La racine de ce polynôme est égale à" + x + ".");
            }

            // cas delta positif//
            else {
                System.out.println("Il y a deux solutions.");
                int x1 = (int) (-b + Math.sqrt(delta) / (2 * a));
                int x2 = (int) (-b - Math.sqrt(delta) / (2 * a));
                System.out.println("Les racines de ce polynôme sont égales à " + x1 + " et " + x2 + ".");
            }
        }
    }

    public static void parite() {
        // Import du scanner//
        try (Scanner sc = new Scanner(System.in)) {
            // Déclaration des variables//
            System.out.println("Veuillez entrer un entier :");
            int a = sc.nextInt();

            // Calcul de la parité//
            if (a % 2 == 0) {
                System.out.println("Le nombre est pair.");
            } else {
                System.out.println("Le nombre est impair.");
            }
        }
    }

    public static void extremum() {
        // Import du scanner//
        try (Scanner sc = new Scanner(System.in)) {

            // Déclaration des variables//
            System.out.println("Veuillez entrer un premier entier :");
            int a = sc.nextInt();
            System.out.println("Veuillez entrer un second entier :");
            int b = sc.nextInt();

            // Calcul de l'extremum//
            if (a < b) {
                System.out.println("Le minimum entre ces deux valeurs est de " + a + ".");
                System.out.println("Le maximum entre ces deux valeurs est de " + b + ".");
            } else if (a > b) {
                System.out.println("Le minimum entre ces deux valeurs est de " + b + ".");
                System.out.println("Le maximum entre ces deux valeurs est de " + a + ".");
            } else {
                System.out.println("Les deux valeurs sont égales.");
            }
        }
    }

    public static void egaliteStr() {
        try (Scanner sc = new Scanner(System.in)) {
            // entrée des chaines de caractères
            System.out.println("Entrez une chaine de caractères : ");
            String str1 = sc.nextLine();
            System.out.println("Entrez une autre chaine de caractères : ");
            String str2 = sc.nextLine();

            // comparaison des chaines de caractères et affichage du résultat
            if (str1.equals(str2)) {
                System.out.println("Les deux chaines sont identiques");
            } else {
                System.out.println("Les deux chaines sont différentes");
            }
        }
    }

    public static void factorielle() {
        try (Scanner sc = new Scanner(System.in)) {
            // entrée du nombre
            System.out.println("Saisir un entier positif ou nul :");
            int n = sc.nextInt();

            // calcul de la factorielle
            int factorielle = 1;
            for (int i = 1; i <= n; i++) {
                factorielle *= i;
            }

            // affichage du résultat
            System.out.println("!" + n + " = " + factorielle + " (calculé avec une boucle for)");
        }
    }

    /**
     * 
     */
    public static void countdown() {

        final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

        final Runnable runnable = new Runnable() {
            int count = 10;

            public void run() {
                System.out.println(count);
                count--;

                if (count < 0) {
                    System.out.println("Joyeux anniversaire Idir !");
                    scheduler.shutdown();
                }
            }
        };
        scheduler.scheduleAtFixedRate(runnable, 0, 1, TimeUnit.SECONDS);
    }

    public static void carres() {
        try (Scanner sc = new Scanner(System.in)) {
            // On entre un nombre dont on va calculer le carré
            System.out.println("Entrez un nombre : ");
            int n = sc.nextInt();

            // On calcule le carré du nombre
            int carre = n * n;

            // On affiche le résultat
            System.out.println("Le carré de " + n + " est " + carre + ".");
        }
    }

    public static void tableMultiplication() {
        for (int i = 1; i <= 10; i++) {
            for (int j = 1; j <= 10; j++) {
                System.out.print(i * j + "\t");
            }
            System.out.println();
        }
    }

    public static void division() {
        try (Scanner sc = new Scanner(System.in)) {
            // On entre un nombre dont on va calculer le carré
            System.out.println("Entre un nombre : ");
            int n = sc.nextInt();
            int n2 = 0;

            while (n2 == 0) {
                System.out.println("Entre un deuxième nombre (différent de 0 : ");
                n2 = sc.nextInt();

                if (n2 == 0) {
                    System.out.println("Fréro, ne divise pas par 0, c'est pas possible !");
                }
            }

            // On calcule la division
            int division = n / n2;

            // On affiche le résultat
            System.out
                    .println("La division de " + n + " par " + n2 + " est : " + n + "/" + n2 + " = " + division + ".");
        }
    }

    public static void regle() {
        try (Scanner sc = new Scanner(System.in)) {
            // on entre la taille de la règle qu'on veut mesurer le péni

            System.out.println("Entrez la taille de la règle : ");
            int taille = sc.nextInt();

            // on fabrique la règle
            for (int i = 0; i < taille; i++) {
                System.out.print("_");
            }
        }
    }

    public static void nombrePremier() {
        try (Scanner sc = new Scanner(System.in)) {
            // on entre le nombre dont on veut savoir s'il est premier
            System.out.println("Entrez un nombre : ");
            int n = sc.nextInt();

            // on calcule si le nombre est premier
            boolean premier = true;
            for (int i = 2; i < n; i++) {
                if (n % i == 0) {
                    premier = false;
                }
            }

            // on affiche le résultat
            if (premier) {
                System.out.println(n + " est un nombre premier.");
            } else {
                System.out.println(n + " n'est pas un nombre premier.");
            }
        }
    }

    public static void intialisationTableau() {
        int[] tableau = new int[20];
        try (Scanner sc = new Scanner(System.in)) {
            for (int i = 0; i < tableau.length; i++) {
                System.out.println("Saisir un entier :");
                int entier = sc.nextInt();
                tableau[i] = entier;
            }
        }
    }

    public static void affichageTableau() {
        int[] tableau = initialisationTableau();

        int taille = tableau.length;

        // Détermination du minimum et du maximum
        int min = tableau[0];
        int max = tableau[0];

        for (int i = 1; i < taille; i++) {
            if (tableau[i] < min) {
                min = tableau[i];
            }
            if (tableau[i] > max) {
                max = tableau[i];
            }
        }

        System.out.println("Le minimum du tableau est : " + min);
        System.out.println("Le maximum du tableau est : " + max);

        // Calcul de la somme des éléments
        int somme = 0;

        for (int i = 0; i < taille; i++) {
            somme += tableau[i];
        }

        System.out.println("La somme des éléments du tableau est : " + somme);

        // Affichage des éléments pairs
        System.out.print("Les éléments pairs du tableau sont : ");

        for (int i = 0; i < taille; i++) {
            if (tableau[i] % 2 == 0) {
                System.out.print(tableau[i] + " ");
            }
        }
        System.out.println();

        // Affichage des éléments d'indice pair
        System.out.print("Les éléments d'indice pair du tableau sont : ");

        for (int i = 0; i < taille; i += 2) {
            System.out.print(tableau[i] + " ");
        }
        System.out.println();

        // Inversion du tableau
        int[] tableauInverse = inverseTableau(tableau);

        System.out.print("Le tableau inversé est : ");

        for (int i = 0; i < taille; i++) {
            System.out.print(tableauInverse[i] + " ");
        }
        System.out.println();
    }

    public static int[] initialisationTableau() {
        int[] tableau = new int[20];
        try (Scanner sc = new Scanner(System.in)) {
            for (int i = 0; i < tableau.length; i++) {
                System.out.println("Saisir un entier :");
                int entier = sc.nextInt();
                tableau[i] = entier;
            }
        }
        return tableau;
    }

    public static int[] inverseTableau(int[] tableau) {
        int taille = tableau.length;
        int[] tableauInverse = new int[taille];

        for (int i = 0; i < taille; i++) {
            tableauInverse[taille - i - 1] = tableau[i];
        }

        return tableauInverse;
    }
}
